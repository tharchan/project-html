import java.util.HashMap;


public class UserAccountList {
	private HashMap<String, UserAccount> userAccountList;
	
	public UserAccountList(){
		userAccountList = new HashMap<String, UserAccount>();		
	}
	public UserAccount search(String uName){
		return userAccountList.get(uName);
	}
	public boolean add(String uname, UserAccount acc){
		if(!userAccountList.containsKey(uname)){
			userAccountList.put(uname, acc);
			return true;
		}
		return false;
	}
	
	public boolean add(String uname, String pass, String email){
		UserAccount acc  = UserAccount.getInstance(uname, pass, email);
		return this.add(uname, acc);
	}
	
	public boolean edit(String uName, UserAccount acc){
		if(userAccountList.containsKey(uName)){
			userAccountList.get(uName).setEmail(acc.getEmail());
			userAccountList.get(uName).setPassowrd(acc.getPassword());
			return true;
		}
		return false;
	}
	public boolean edit(String uName, String pass, String email){		
		if(userAccountList.containsKey(uName)){
			userAccountList.get(uName).setEmail(email);
			userAccountList.get(uName).setPassowrd(pass);
			return true;
		}
		return false;
	}
	public boolean remove(String uName){
		if(userAccountList.containsKey(uName)){
			userAccountList.remove(uName);
			return true;
		}
		return false;
	}
	
	public boolean changeUserName(String uName, String newName){
		if(userAccountList.containsKey(uName)){
			userAccountList.get(uName).setUserName(newName);
		}		
		return false;
	}
	public boolean changePassword(String uName, String pass){		
		if(userAccountList.containsKey(uName)){
			userAccountList.get(uName).setPassowrd(pass);
			return true;
		}
		return false;
	}
	public boolean changeEmail(String uName, String newEmail){		
		if(userAccountList.containsKey(uName)){
			userAccountList.get(uName).setEmail(newEmail);
			return true;
		}
		return false;
	}
	public void clear(){
		userAccountList.clear();
	}
	
	public boolean authenticate(String uName, String pass){
		
		return false;
	}
	
	public void load(){
		this.Database_Load();
	}
	public void save(){
		this.Database_Save();
	}	
	protected void Database_Load(){
		// for future implementation
	}
	protected void Database_Save(){
		// for future implementation			
	}
	
}
